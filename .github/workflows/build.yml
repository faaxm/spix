name: Build and Test
on:
  push:
  schedule:
    - cron:  '0 0 * * 0' # weekly

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, ubuntu-18.04, windows-latest, macos-latest, macos-10.15]
        build_type: ['Release', 'Debug']
        include:
          - os: ubuntu-latest
            triplet: 'x64-linux'
            cmake_flags: '-DCMAKE_CXX_COMPILER=clang++'
          - os: ubuntu-20.04
            triplet: 'x64-linux'
            cmake_flags: '-DCMAKE_CXX_COMPILER=g++'
          - os: ubuntu-18.04
            triplet: 'x64-linux'
            cmake_flags: '-DCMAKE_CXX_COMPILER=g++'
          - os: windows-latest
            triplet: 'x64-windows'
            cmake_flags: '"-DAnyRPC_ROOT=C:/Program Files (x86)/AnyRPC" "-DGTest_ROOT=C:/Program Files (x86)/googletest-distribution"'
          - os: macos-latest
            triplet: 'x64-osx'
            cmake_flags: ''
          - os: macos-10.15
            triplet: 'x64-osx'
            cmake_flags: ''
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2

      - name: Install dependencies
        env:
          CI_BUILD_TYPE: ${{ matrix.build_type }}
        run: sh ./ci/install-deps.sh

      - name: "Configure"
        run: |
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DSPIX_BUILD_TESTS=ON -DSPIX_BUILD_EXAMPLES=ON ${{ matrix.cmake_flags}} .
      
      - name: "Print cmake compile commands"
        if: ${{ !contains(matrix.os, 'windows') }}
        run: cat build/compile_commands.json
      
      - name: "Build"
        run: cmake --build build --config ${{ matrix.build_type }}
      
      - name: "Run Tests"
        run: cd build && ctest -VV -C ${{ matrix.build_type }} && cd ..
