name: Build and Test
on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * 0' # weekly

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, windows-latest, macos-latest, macos-10.15]
        build_type: ['Release', 'Debug']
        shared_libs: ['ON', 'OFF']
        qt_version: [[5, 12, 12], [5, 15, 2], [6, 2, 3]]
        include:
          - os: ubuntu-latest
            triplet: 'x64-linux'
            cmake_flags: '-DCMAKE_CXX_COMPILER=clang++'
          - os: ubuntu-latest
            triplet: 'x64-linux'
            cmake_flags: '-DCMAKE_CXX_COMPILER=clang++'
          - os: ubuntu-20.04
            triplet: 'x64-linux'
            cmake_flags: '-DCMAKE_CXX_COMPILER=g++'
          - os: windows-latest
            triplet: 'x64-windows'
            cmake_flags: '"-DAnyRPC_ROOT=C:/Program Files (x86)/AnyRPC" "-DGTest_ROOT=C:/Program Files (x86)/googletest-distribution"'
          - os: macos-latest
            triplet: 'x64-osx'
            cmake_flags: ''
          - os: macos-10.15
            triplet: 'x64-osx'
            cmake_flags: ''
        exclude:
        # Disabled until https://github.com/sgieseking/anyrpc/pull/43 is in place
          - os: windows-latest
            shared_libs: 'ON'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1  # not v2!
        with:
          path: ../Qt
          key: ${{ runner.os }}-${{ join(matrix.qt_version, '.') }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          aqtversion: '>=1.2.1'
          version: ${{ join(matrix.qt_version, '.') }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Install dependencies
        env:
          CI_BUILD_TYPE: ${{ matrix.build_type }}
          SHARED_LIBS: ${{ matrix.shared_libs }}
        run: sh ./ci/install-deps.sh

      - name: "Configure"
        run: |
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DSPIX_BUILD_TESTS=ON -DSPIX_BUILD_EXAMPLES=ON ${{ matrix.cmake_flags}} -DBUILD_SHARED_LIBS=${{ matrix.shared_libs }} -DSPIX_QT_MAJOR=${{ matrix.qt_version[0] }} .
      
      - name: "Print cmake compile commands"
        if: ${{ !contains(matrix.os, 'windows') }}
        run: cat build/compile_commands.json
      
      - name: "Build"
        run: cmake --build build --config ${{ matrix.build_type }}
      
      - name: "Run Tests"
        run: cd build && ctest -VV -C ${{ matrix.build_type }} && cd ..
      
      - name: "Test GTest Examples (*nix)"
        # Qt6 on GitHub Actions MacOS is currently bugged: https://bugreports.qt.io/browse/QTIFW-1592
        if: ${{ !contains(matrix.os, 'windows') && !(contains(matrix.os, 'mac') && matrix.qt_version[0] == 6) }}
        run: |
          build/examples/GTest/SpixGTestExample -platform minimal
          build/examples/RepeaterLoader/SpixRepeaterLoaderExampleGTest -platform minimal

      - name: "Test GTest Examples (win)"
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          .\build\examples\GTest\${{ matrix.build_type }}\SpixGTestExample.exe -platform minimal
          .\build\examples\RepeaterLoader\${{ matrix.build_type }}\SpixRepeaterLoaderExampleGTest.exe -platform minimal
      
      - name: "Install Spix (*nix)"
        if: ${{ !contains(matrix.os, 'windows') }}
        run: sudo cmake --install build --config ${{ matrix.build_type }}
      
      - name: "Install Spix (win)"
        if: ${{ contains(matrix.os, 'windows') }}
        run: cmake --install build --config ${{ matrix.build_type }}
      
      - name: "Build Standalone Example"
        run: |
          cd examples/BasicStandalone
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DSPIX_QT_MAJOR=${{ matrix.qt_version[0] }} ${{ matrix.cmake_flags}} .
          cmake --build build --config ${{ matrix.build_type }}


